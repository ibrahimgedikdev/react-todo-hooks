{"version":3,"sources":["components/Footer/Footer.js","components/Input/Input.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","todos","setStatus","unCompletedTodos","filter","todo","completed","className","length","onClick","Input","todoText","setTodoText","onSubmit","isEditing","currentTodo","setCurrentTodo","editOnSubmit","value","title","onChange","e","target","console","log","type","placeholder","size","color","Todo","handleDeleteClick","handleEditClick","handleCompleteTodo","defaultChecked","id","TodoList","filteredTodos","map","App","useState","savedTodos","localStorage","getItem","JSON","parse","setTodos","setIsEditing","completedTodo","setCompletedTodo","status","setFilteredTodos","saveLocalTodos","useCallback","setItem","stringify","useEffect","filterTodos","handleUpdateTodo","updatedTodo","updatedItem","preventDefault","Math","floor","random","trim","removeTodo","completeTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf813cc.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Footer({todos, setStatus }) {\n    const unCompletedTodos = todos && todos.filter((todo) => {\n       return todo.completed === false\n    })\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-container\">\n                <span className=\"todo-count\">{unCompletedTodos.length} items left</span>\n                <div className=\"filter-btns\">\n                   <button onClick={() => setStatus('All')}>All</button>\n                   <button onClick={() => setStatus('Active')}>Active</button>\n                   <button onClick={() => setStatus('Completed')}>Completed</button>\n                </div>\n                <button className=\"clear-btn\">Clear completed</button>\n            </div> \n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { IoIosArrowDown, IoIosClose } from \"react-icons/io\";\nimport { GrUpdate } from \"react-icons/gr\";\n\nfunction Input({\n  todoText,\n  setTodoText,\n  onSubmit,\n  isEditing,\n  currentTodo,\n  setCurrentTodo,\n  editOnSubmit,\n}) {\n  const handleInputChange = (e) => {\n    setTodoText(e.target.value);\n  };\n  const handleEditInputChange = (e) => {\n    setCurrentTodo({ ...currentTodo, title: e.target.value });\n    console.log(currentTodo);\n  };\n  return isEditing ? (\n    <form onSubmit={editOnSubmit} className=\"add-todo-container\">\n      <input\n        value={currentTodo.title}\n        onChange={handleEditInputChange}\n        type=\"text\"\n        placeholder=\"What needs to be done ?\"\n        className=\"add-todo-input edit-todo-input\"\n      />\n      <button type=\"submit\" onClick={editOnSubmit}>\n        <GrUpdate size={17} color={\"#2ecc71\"} />\n      </button>\n      <button>\n        <IoIosClose size={40} color={\"#e74c3c\"} />\n      </button>\n    </form>\n  ) : (\n    <form onSubmit={onSubmit} className=\"add-todo-container\">\n      <IoIosArrowDown size={25} color={\"#2c3e50\"} className=\"input-icon\" />\n      <input\n        value={todoText}\n        onChange={handleInputChange}\n        type=\"text\"\n        placeholder=\"What needs to be done ?\"\n        className=\"add-todo-input\"\n      />\n    </form>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nfunction Todo({ todo, handleDeleteClick, handleEditClick, handleCompleteTodo }) {\n  return (\n    <div className=\"todo\">\n      <label className=\"checkbox-container\">\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          defaultChecked={todo.completed ? true : false}\n          onChange={() => handleCompleteTodo(todo.id)}\n        />\n        <span className=\"checkmark\"></span>\n      </label>\n      <div className={`todo-text ${todo.completed ? 'completed-todo' : ''}`}>{todo.title}</div>\n      <button onClick={() => handleEditClick(todo)}>\n        <AiFillEdit size={22} color={\"#2ecc71\"} />\n      </button>\n      <button onClick={() => handleDeleteClick(todo.id)}>\n        <IoIosClose size={40} color={\"#e74c3c\"} />\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"../Todo/Todo\";\n\nfunction TodoList({\n  handleDeleteClick,\n  handleEditClick,\n  handleCompleteTodo,\n  filteredTodos\n}) {\n  return (\n    <div>\n      {filteredTodos && filteredTodos.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          handleDeleteClick={handleDeleteClick}\n          handleEditClick={handleEditClick}\n          handleCompleteTodo={handleCompleteTodo}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport Footer from \"./components/Footer/Footer\";\nimport Input from \"./components/Input/Input\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport \"./main.scss\";\n\n\nfunction App() {\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    if(savedTodos){\n        return JSON.parse(savedTodos)\n    } else {\n      return [];\n    }\n  });\n  const [todoText, setTodoText] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState({});\n  const [completedTodo, setCompletedTodo] = useState(null);\n  const [status, setStatus] = useState('All');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  const saveLocalTodos = useCallback(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  \n  useEffect(() => {\n    const filterTodos = () => {\n      switch (status) {\n        case 'All':\n          setFilteredTodos(todos)\n          break;\n        case 'Completed':\n          setFilteredTodos(todos.filter((todo) => todo.completed === true))\n          break;\n        case 'Active':\n          setFilteredTodos(todos.filter((todo) => todo.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos)\n      }\n    }\n    filterTodos();\n    saveLocalTodos();\n  }, [todos,status,saveLocalTodos])\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      {\n        id: Math.floor(Math.random() * 100),\n        title: todoText.trim(),\n        completed: false,\n      },\n    ]);\n    setTodoText(\"\")\n  };\n\n  const editOnSubmit = (e) => {\n    e.preventDefault()\n    handleUpdateTodo(currentTodo.id, currentTodo)\n  }\n\n  const handleDeleteClick = (id) => {\n    const removeTodo = todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    setTodos(removeTodo);\n  };\n\n  const handleUpdateTodo = (id, updatedTodo) => {\n    const updatedItem = todos.map((todo => {\n      return todo.id === id ? updatedTodo : todo;\n    }));\n    setIsEditing(false);\n    setTodos(updatedItem)\n  }\n\n  const handleEditClick = (todo) => {\n    setIsEditing(true);\n    setCurrentTodo({...todo})\n  }\n\n  const handleCompleteTodo = (id) => {\n    const completeTodo = todos.map((todo=> {\n        return todo.id===id ? {...todo, completed:!todo.completed} : {...todo}\n    }))\n    setCompletedTodo(!completedTodo)\n    setTodos(completeTodo)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"todo-app-heading\">todos</h1>\n         <div className=\"todo-app\">\n         <Input\n           todoText={todoText}\n           setTodoText={setTodoText}\n           onSubmit={onSubmit}\n           isEditing={isEditing}\n           currentTodo={currentTodo}\n           setCurrentTodo={setCurrentTodo}\n           editOnSubmit={editOnSubmit}\n         />\n         <TodoList \n           handleDeleteClick={handleDeleteClick}\n           handleEditClick={handleEditClick}\n           handleCompleteTodo={handleCompleteTodo}\n           filteredTodos={filteredTodos}\n         />\n         <Footer \n           todos={todos}\n           setStatus={setStatus}\n          />\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}